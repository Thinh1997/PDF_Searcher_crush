// This file is autogenerated: please see the codegen template "Options"
namespace pdftron{ namespace PDF{ 

WordToPDFOptions::WordToPDFOptions()
	: ConversionOptions()
{
}

WordToPDFOptions::~WordToPDFOptions()
{
}


UString WordToPDFOptions::GetLayoutResourcesPluginPath()
{
	SDF::Obj found = m_dict.FindObj("LayoutResourcesPluginPath");
	if(!found.IsNull())
	{
		return found.GetAsPDFText();
	}
	return "";
}

WordToPDFOptions& WordToPDFOptions::SetLayoutResourcesPluginPath(UString value)
{
	m_dict.PutText("LayoutResourcesPluginPath", value);
	return *this;
}


UString WordToPDFOptions::GetResourceDocPath()
{
	SDF::Obj found = m_dict.FindObj("ResourceDocPath");
	if(!found.IsNull())
	{
		return found.GetAsPDFText();
	}
	return "";
}

WordToPDFOptions& WordToPDFOptions::SetResourceDocPath(UString value)
{
	m_dict.PutText("ResourceDocPath", value);
	return *this;
}


UString WordToPDFOptions::GetSmartSubstitutionPluginPath()
{
	SDF::Obj found = m_dict.FindObj("SmartSubstitutionPluginPath");
	if(!found.IsNull())
	{
		return found.GetAsPDFText();
	}
	return "";
}

WordToPDFOptions& WordToPDFOptions::SetSmartSubstitutionPluginPath(UString value)
{
	m_dict.PutText("SmartSubstitutionPluginPath", value);
	return *this;
}


}
}
