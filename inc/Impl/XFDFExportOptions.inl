// This file is autogenerated: please see the codegen template "Options"
namespace pdftron{ namespace FDF{ 

inline XFDFExportOptions::XFDFExportOptions()
	: m_obj_set()
	, m_dict()
{
	m_dict = m_obj_set.CreateDict();
}

inline XFDFExportOptions::~XFDFExportOptions()
{
}


inline bool XFDFExportOptions::GetWriteAnnotationAppearance()
{
	SDF::Obj found = m_dict.FindObj("WriteAnnotationAppearance");
	if(found.IsValid())
	{
		return (found.GetBool());
	}
	return (false);
}

inline XFDFExportOptions& XFDFExportOptions::SetWriteAnnotationAppearance(bool value)
{
	PDF::OptionsBase::PutBool(m_dict, "WriteAnnotationAppearance", (value));
	return *this;
}


inline bool XFDFExportOptions::GetWriteImagedata()
{
	SDF::Obj found = m_dict.FindObj("WriteImagedata");
	if(found.IsValid())
	{
		return (found.GetBool());
	}
	return (true);
}

inline XFDFExportOptions& XFDFExportOptions::SetWriteImagedata(bool value)
{
	PDF::OptionsBase::PutBool(m_dict, "WriteImagedata", (value));
	return *this;
}



inline const SDF::Obj& XFDFExportOptions::GetInternalObj() const
{
	return m_dict;
}

inline SDF::Obj& XFDFExportOptions::GetInternalObj()
{
	return m_dict;
}

}
}
